---
import Layout from '../layouts/Layout.astro';
import CoursesHeader from '../components/CoursesHeader.astro';

// Данные курсов
const courses = [
  {
    id: "data-analytics",
    title: "Data Analytics",
    description: "Комплексный курс по анализу данных с использованием современных инструментов и технологий",
    duration: "120 часов",
    level: "Начальный - Продвинутый",
    price: "450,000 ₸",
    skills: ["Python", "SQL", "Tableau", "Power BI", "Statistics", "Data Visualization"],
    instructor: "Др. Смирнов А.В.",
    schedule: "3 раза в неделю по 3 часа",
    format: "Онлайн + Практика",
    students: 1000,
    rating: 4.9,
    image: "https://images.unsplash.com/photo-1551288049-bebda4e38f71?w=500&h=300&fit=crop&crop=center"
  },
  {
    id: "ai-ml",
    title: "Искусственный интеллект и машинное обучение",
    description: "Изучение основ ИИ, машинного обучения и глубокого обучения с практическими проектами",
    duration: "150 часов",
    level: "Средний - Продвинутый",
    price: "600,000 ₸",
    skills: ["Python", "Machine Learning", "Deep Learning", "Neural Networks", "TensorFlow", "Computer Vision"],
    instructor: "Др. Ахметов К.М.",
    schedule: "4 раза в неделю по 3 часа",
    format: "Онлайн + Лабораторные",
    students: 1000,
    rating: 4.8,
    image: "https://images.unsplash.com/photo-1677442136019-21780ecad995?w=500&h=300&fit=crop&crop=center"
  },
  {
    id: "test-automation",
    title: "Автоматизация тестирования с Selenium и Python",
    description: "Полный курс по автоматизации тестирования веб-приложений с использованием Selenium",
    duration: "100 часов",
    level: "Начальный - Средний",
    price: "350,000 ₸",
    skills: ["Python", "Selenium WebDriver", "Pytest", "Test Automation", "API Testing", "Page Object Model"],
    instructor: "Инж. Токтаров Д.А.",
    schedule: "3 раза в неделю по 2.5 часа",
    format: "Онлайн + Практика",
    students: 1000,
    rating: 4.7,
    image: "https://images.unsplash.com/photo-1516321318423-f06f85e504b3?w=500&h=300&fit=crop&crop=center"
  },
  {
    id: "web-development",
    title: "Веб-разработка Full Stack",
    description: "Полный курс по созданию современных веб-приложений с использованием React, Node.js и баз данных",
    duration: "180 часов",
    level: "Начальный - Продвинутый",
    price: "550,000 ₸",
    skills: ["JavaScript", "React", "Node.js", "MongoDB", "Express", "HTML/CSS"],
    instructor: "Инж. Нургалиев А.С.",
    schedule: "4 раза в неделю по 3 часа",
    format: "Онлайн + Проекты",
    students: 1000,
    rating: 4.8,
    image: "https://images.unsplash.com/photo-1461749280684-dccba630e2f6?w=500&h=300&fit=crop&crop=center"
  },
  {
    id: "cybersecurity",
    title: "Кибербезопасность и этичный хакинг",
    description: "Изучение основ информационной безопасности, тестирования на проникновение и защиты систем",
    duration: "140 часов",
    level: "Средний - Продвинутый",
    price: "700,000 ₸",
    skills: ["Ethical Hacking", "Network Security", "Penetration Testing", "Linux", "Wireshark", "Metasploit"],
    instructor: "Др. Кенжебаев М.Т.",
    schedule: "3 раза в неделю по 3.5 часа",
    format: "Онлайн + Лабораторные",
    students: 1000,
    rating: 4.9,
    image: "https://images.unsplash.com/photo-1563986768609-322da13575f3?w=500&h=300&fit=crop&crop=center"
  },
  {
    id: "mobile-development",
    title: "Мобильная разработка (React Native)",
    description: "Создание кроссплатформенных мобильных приложений для iOS и Android с использованием React Native",
    duration: "130 часов",
    level: "Средний",
    price: "500,000 ₸",
    skills: ["React Native", "JavaScript", "iOS", "Android", "Redux", "Firebase"],
    instructor: "Инж. Абдуллаева Г.М.",
    schedule: "3 раза в неделю по 3 часа",
    format: "Онлайн + Практика",
    students: 1000,
    rating: 4.6,
    image: "https://images.unsplash.com/photo-1512941937669-90a1b58e7e9c?w=500&h=300&fit=crop&crop=center"
  }
];
---

<Layout>
  <div class="flex flex-col bg-no-repeat bg-cover bg-center bg-[url('/src/assets/hero-bg.jpg')] min-h-screen px-[10px] lg:px-12 py-[22px] lg:py-[34px]">
    <CoursesHeader/>
    
    <!-- Hero Section -->
    <div class="flex-1 flex items-center justify-center py-20">
      <div class="max-w-6xl mx-auto px-4">
        <!-- Page Title -->
        <div class="text-center mb-16">
          <h1 class="text-4xl lg:text-6xl font-bold text-white mb-6">
            Наши курсы
          </h1>
          <p class="text-xl text-white/80 max-w-3xl mx-auto">
            Профессиональное обучение IT-специальностям с практическим подходом и сертификацией
          </p>
        </div>

        <!-- Courses Grid -->
        <div class="grid grid-cols-1 md:grid-cols-2 xl:grid-cols-3 gap-8">
          {courses.map((course) => (
            <div class="bg-white/10 backdrop-blur-lg rounded-2xl border border-white/20 p-8 shadow-2xl hover:bg-white/15 transition-all duration-300 course-card">
              <!-- Course Image -->
              <div class="mb-6">
                <img src={course.image} alt={course.title} class="w-full h-48 object-cover rounded-xl">
              </div>

              <!-- Course Header -->
              <div class="mb-6">
                <div class="flex items-center justify-between mb-3">
                  <span class="bg-blue-500/20 text-blue-300 px-3 py-1 rounded-full text-sm font-medium">
                    {course.level}
                  </span>
                  <div class="flex items-center text-yellow-400">
                    <svg class="w-4 h-4 mr-1" fill="currentColor" viewBox="0 0 20 20">
                      <path d="M9.049 2.927c.3-.921 1.603-.921 1.902 0l1.07 3.292a1 1 0 00.95.69h3.462c.969 0 1.371 1.24.588 1.81l-2.8 2.034a1 1 0 00-.364 1.118l1.07 3.292c.3.921-.755 1.688-1.54 1.118l-2.8-2.034a1 1 0 00-1.175 0l-2.8 2.034c-.784.57-1.838-.197-1.539-1.118l1.07-3.292a1 1 0 00-.364-1.118L2.98 8.72c-.783-.57-.38-1.81.588-1.81h3.461a1 1 0 00.951-.69l1.07-3.292z"></path>
                    </svg>
                    <span class="text-sm font-medium">{course.rating}</span>
                  </div>
                </div>
                
                <h3 class="text-2xl font-bold text-white mb-3">{course.title}</h3>
                <p class="text-white/70 text-sm leading-relaxed">{course.description}</p>
              </div>

              <!-- Course Details -->
              <div class="space-y-4 mb-6">
                <div class="grid grid-cols-2 gap-4 text-sm">
                  <div>
                    <span class="text-white/60">Длительность:</span>
                    <p class="text-white font-semibold">{course.duration}</p>
                  </div>
                  <div>
                    <span class="text-white/60">Довольных учеников:</span>
                    <p class="text-white font-semibold">{course.students}+</p>
                  </div>
                </div>
                
                <div>
                  <span class="text-white/60 text-sm">Преподаватель:</span>
                  <p class="text-white font-medium">{course.instructor}</p>
                </div>
                
                <div>
                  <span class="text-white/60 text-sm">Формат:</span>
                  <p class="text-white font-medium">{course.format}</p>
                </div>
              </div>

              <!-- Skills -->
              <div class="mb-6">
                <h4 class="text-white font-semibold mb-3">Изучаемые технологии:</h4>
                <div class="flex flex-wrap gap-2">
                  {course.skills.map((skill) => (
                    <span class="bg-white/10 text-white/80 px-3 py-1 rounded-full text-xs">
                      {skill}
                    </span>
                  ))}
                </div>
              </div>

              <!-- Price and CTA -->
              <div class="border-t border-white/20 pt-6">
                <div class="flex items-center justify-between mb-4">
                  <div>
                    <span class="text-3xl font-bold text-white">{course.price}</span>
                    <span class="text-white/60 text-sm ml-2">за курс</span>
                  </div>
                </div>
                
                <button class="w-full bg-gradient-to-r from-blue-500 to-purple-600 hover:from-blue-600 hover:to-purple-700 text-white font-semibold py-3 px-6 rounded-xl transition-all duration-300 transform hover:scale-105 course-register-btn" data-course-id={course.id} data-course-title={course.title}>
                  Записаться на курс
                </button>
              </div>
            </div>
          ))}
        </div>

        <!-- Additional Info -->
        <div class="mt-20 text-center">
          <div class="bg-white/10 backdrop-blur-lg rounded-2xl border border-white/20 p-8 lg:p-12">
            <h2 class="text-3xl font-bold text-white mb-6">
              Почему выбирают наши курсы?
            </h2>
            
            <div class="grid grid-cols-1 md:grid-cols-3 gap-8">
              <div class="text-center">
                <div class="w-16 h-16 bg-blue-500/20 rounded-full flex items-center justify-center mx-auto mb-4">
                  <svg class="w-8 h-8 text-blue-400" fill="none" stroke="currentColor" viewBox="0 0 24 24">
                    <path stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M9 12l2 2 4-4m6 2a9 9 0 11-18 0 9 9 0 0118 0z"></path>
                  </svg>
                </div>
                <h3 class="text-xl font-semibold text-white mb-2">Сертификация</h3>
                <p class="text-white/70">Получите официальный сертификат по завершении курса</p>
              </div>
              
              <div class="text-center">
                <div class="w-16 h-16 bg-green-500/20 rounded-full flex items-center justify-center mx-auto mb-4">
                  <svg class="w-8 h-8 text-green-400" fill="none" stroke="currentColor" viewBox="0 0 24 24">
                    <path stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M13 10V3L4 14h7v7l9-11h-7z"></path>
                  </svg>
                </div>
                <h3 class="text-xl font-semibold text-white mb-2">Практика</h3>
                <p class="text-white/70">Реальные проекты и практические задания</p>
              </div>
              
              <div class="text-center">
                <div class="w-16 h-16 bg-purple-500/20 rounded-full flex items-center justify-center mx-auto mb-4">
                  <svg class="w-8 h-8 text-purple-400" fill="none" stroke="currentColor" viewBox="0 0 24 24">
                    <path stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M17 20h5v-2a3 3 0 00-5.356-1.857M17 20H7m10 0v-2c0-.656-.126-1.283-.356-1.857M7 20H2v-2a3 3 0 015.356-1.857M7 20v-2c0-.656.126-1.283.356-1.857m0 0a5.002 5.002 0 019.288 0M15 7a3 3 0 11-6 0 3 3 0 016 0zm6 3a2 2 0 11-4 0 2 2 0 014 0zM7 10a2 2 0 11-4 0 2 2 0 014 0z"></path>
                  </svg>
                </div>
                <h3 class="text-xl font-semibold text-white mb-2">Поддержка</h3>
                <p class="text-white/70">Персональная поддержка преподавателей</p>
              </div>
            </div>
          </div>
        </div>
      </div>
    </div>

    <!-- Footer -->
    <footer class="mt-auto py-8 border-t border-white/10">
      <div class="max-w-6xl mx-auto px-4 text-center">
        <h3 class="text-xl font-bold text-white mb-4">Готовы начать обучение?</h3>
        <p class="text-white/70 mb-6">
          Свяжитесь с нами для записи на курс или получения дополнительной информации
        </p>
        <div class="flex flex-col sm:flex-row justify-center items-center gap-6 text-white/80">
          <div class="flex items-center">
            <svg class="w-5 h-5 text-blue-400 mr-2" fill="none" stroke="currentColor" viewBox="0 0 24 24">
              <path stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M3 5a2 2 0 012-2h3.28a1 1 0 01.948.684l1.498 4.493a1 1 0 01-.502 1.21l-2.257 1.13a11.042 11.042 0 005.516 5.516l1.13-2.257a1 1 0 011.21-.502l4.493 1.498a1 1 0 01.684.949V19a2 2 0 01-2 2h-1C9.716 21 3 14.284 3 6V5z"></path>
            </svg>
            <span>8 777 007 07 09</span>
          </div>
          <div class="flex items-center">
            <svg class="w-5 h-5 text-blue-400 mr-2" fill="none" stroke="currentColor" viewBox="0 0 24 24">
              <path stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M3 8l7.89 4.26a2 2 0 002.22 0L21 8M5 19h14a2 2 0 002-2V7a2 2 0 00-2-2H5a2 2 0 00-2 2v10a2 2 0 002 2z"></path>
            </svg>
            <span>multivision@gmail.com</span>
          </div>
        </div>
        <p class="text-white/50 text-sm mt-6">
          © 2025 Multivision. Все права защищены.
        </p>
      </div>
    </footer>
  </div>

  <!-- Registration Modal -->
  <div id="registrationModal" class="fixed inset-0 bg-black/50 backdrop-blur-sm z-50 hidden flex items-center justify-center p-4">
    <div class="bg-white/10 backdrop-blur-lg rounded-2xl border border-white/20 p-8 max-w-md w-full mx-4">
      <div class="flex justify-between items-center mb-6">
        <h3 class="text-2xl font-bold text-white">Запись на курс</h3>
        <button id="closeModal" class="text-white/60 hover:text-white text-2xl">&times;</button>
      </div>
      
      <form id="registrationForm" class="space-y-4">
        <div>
          <label class="block text-white/80 text-sm font-medium mb-2">Курс</label>
          <input type="text" id="courseName" class="w-full bg-white/10 border border-white/20 rounded-lg px-4 py-3 text-white placeholder-white/50 focus:outline-none focus:border-blue-400" readonly>
        </div>
        
        <div>
          <label class="block text-white/80 text-sm font-medium mb-2">Имя *</label>
          <input type="text" id="studentName" class="w-full bg-white/10 border border-white/20 rounded-lg px-4 py-3 text-white placeholder-white/50 focus:outline-none focus:border-blue-400" placeholder="Введите ваше имя" required>
        </div>
        
        <div>
          <label class="block text-white/80 text-sm font-medium mb-2">Телефон *</label>
          <input type="tel" id="studentPhone" class="w-full bg-white/10 border border-white/20 rounded-lg px-4 py-3 text-white placeholder-white/50 focus:outline-none focus:border-blue-400" placeholder="+7 (___) ___-__-__" required>
        </div>
        
        <div>
          <label class="block text-white/80 text-sm font-medium mb-2">Email *</label>
          <input type="email" id="studentEmail" class="w-full bg-white/10 border border-white/20 rounded-lg px-4 py-3 text-white placeholder-white/50 focus:outline-none focus:border-blue-400" placeholder="your@email.com" required>
        </div>
        
        <div>
          <label class="block text-white/80 text-sm font-medium mb-2">Уровень подготовки</label>
          <select id="studentLevel" class="w-full bg-white/10 border border-white/20 rounded-lg px-4 py-3 text-white focus:outline-none focus:border-blue-400">
            <option value="beginner" class="bg-gray-800">Начальный</option>
            <option value="intermediate" class="bg-gray-800">Средний</option>
            <option value="advanced" class="bg-gray-800">Продвинутый</option>
          </select>
        </div>
        
        <div>
          <label class="block text-white/80 text-sm font-medium mb-2">Комментарий</label>
          <textarea id="studentComment" class="w-full bg-white/10 border border-white/20 rounded-lg px-4 py-3 text-white placeholder-white/50 focus:outline-none focus:border-blue-400 h-20 resize-none" placeholder="Расскажите о ваших целях и ожиданиях от курса"></textarea>
        </div>
        
        <div class="flex gap-3 pt-4">
          <button type="button" id="cancelBtn" class="flex-1 bg-white/10 hover:bg-white/20 text-white font-semibold py-3 px-6 rounded-xl transition-all duration-300">
            Отмена
          </button>
          <button type="submit" class="flex-1 bg-gradient-to-r from-blue-500 to-purple-600 hover:from-blue-600 hover:to-purple-700 text-white font-semibold py-3 px-6 rounded-xl transition-all duration-300">
            Отправить заявку
          </button>
        </div>
      </form>
    </div>
  </div>

  <!-- Success Modal -->
  <div id="successModal" class="fixed inset-0 bg-black/50 backdrop-blur-sm z-50 hidden flex items-center justify-center p-4">
    <div class="bg-white/10 backdrop-blur-lg rounded-2xl border border-white/20 p-8 max-w-md w-full mx-4 text-center">
      <div class="w-16 h-16 bg-green-500 rounded-full flex items-center justify-center mx-auto mb-4">
        <svg class="w-8 h-8 text-white" fill="none" stroke="currentColor" viewBox="0 0 24 24">
          <path stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M5 13l4 4L19 7"></path>
        </svg>
      </div>
      <h3 class="text-2xl font-bold text-white mb-4">Заявка отправлена!</h3>
      <p class="text-white/70 mb-6">
        Спасибо за интерес к нашему курсу! Мы свяжемся с вами в течение 24 часов для уточнения деталей.
      </p>
      <button id="closeSuccessModal" class="w-full bg-gradient-to-r from-blue-500 to-purple-600 hover:from-blue-600 hover:to-purple-700 text-white font-semibold py-3 px-6 rounded-xl transition-all duration-300">
        Понятно
      </button>
    </div>
  </div>
</Layout>

<script>
  import gsap from "gsap";
  
  // Анимация появления карточек курсов
  gsap.fromTo(".course-card", 
    { opacity: 0, y: 50 }, 
    { 
      opacity: 1, 
      y: 0, 
      duration: 0.8, 
      ease: "power2.out",
      stagger: 0.2
    }
  );

  // Обработка модального окна записи на курс
  document.addEventListener('DOMContentLoaded', function() {
    const modal = document.getElementById('registrationModal');
    const successModal = document.getElementById('successModal');
    const courseNameInput = document.getElementById('courseName') as HTMLInputElement;
    const form = document.getElementById('registrationForm') as HTMLFormElement;
    
    if (!modal || !successModal || !courseNameInput || !form) return;
    
    // Открытие модального окна при клике на кнопку записи
    document.querySelectorAll('.course-register-btn').forEach(button => {
      button.addEventListener('click', function(this: HTMLElement) {
        const courseTitle = this.getAttribute('data-course-title');
        if (courseTitle) {
          courseNameInput.value = courseTitle;
          modal.classList.remove('hidden');
          modal.classList.add('flex');
          
          // Анимация появления модального окна
          const modalContent = modal.querySelector('.bg-white\\/10');
          if (modalContent) {
            gsap.fromTo(modalContent, 
              { opacity: 0, scale: 0.9, y: 20 },
              { opacity: 1, scale: 1, y: 0, duration: 0.3, ease: "power2.out" }
            );
          }
        }
      });
    });

    // Закрытие модального окна
    function closeModal() {
      if (!modal) return;
      const modalContent = modal.querySelector('.bg-white\\/10');
      if (modalContent) {
        gsap.to(modalContent, {
          opacity: 0,
          scale: 0.9,
          y: 20,
          duration: 0.2,
          ease: "power2.out",
          onComplete: () => {
            if (modal) {
              modal.classList.add('hidden');
              modal.classList.remove('flex');
            }
          }
        });
      }
    }

    const closeModalBtn = document.getElementById('closeModal');
    const cancelBtn = document.getElementById('cancelBtn');
    if (closeModalBtn) closeModalBtn.addEventListener('click', closeModal);
    if (cancelBtn) cancelBtn.addEventListener('click', closeModal);

    // Закрытие модального окна при клике вне его
    modal.addEventListener('click', function(e) {
      if (e.target === modal) {
        closeModal();
      }
    });

    // Обработка отправки формы
    form.addEventListener('submit', function(e) {
      e.preventDefault();
      
      // Получаем данные формы
      const studentName = document.getElementById('studentName') as HTMLInputElement;
      const studentPhone = document.getElementById('studentPhone') as HTMLInputElement;
      const studentEmail = document.getElementById('studentEmail') as HTMLInputElement;
      const studentLevel = document.getElementById('studentLevel') as HTMLSelectElement;
      const studentComment = document.getElementById('studentComment') as HTMLTextAreaElement;
      
      const formData = {
        course: courseNameInput.value,
        name: studentName?.value || '',
        phone: studentPhone?.value || '',
        email: studentEmail?.value || '',
        level: studentLevel?.value || '',
        comment: studentComment?.value || '',
        timestamp: new Date().toISOString()
      };

      // Показываем индикатор загрузки
      const submitBtn = form.querySelector('button[type="submit"]') as HTMLButtonElement;
      if (submitBtn) {
        const originalText = submitBtn.textContent;
        submitBtn.textContent = 'Отправляем...';
        submitBtn.disabled = true;

        // Фейковая отправка заявки (имитация задержки)
        setTimeout(() => {
          console.log('Заявка отправлена:', formData);
          
          // Закрываем форму и показываем успешное сообщение
          closeModal();
          
          setTimeout(() => {
            successModal.classList.remove('hidden');
            successModal.classList.add('flex');
            
            // Анимация появления модального окна успеха
            const successContent = successModal.querySelector('.bg-white\\/10');
            if (successContent) {
              gsap.fromTo(successContent, 
                { opacity: 0, scale: 0.9, y: 20 },
                { opacity: 1, scale: 1, y: 0, duration: 0.3, ease: "power2.out" }
              );
            }
          }, 300);
          
          // Сбрасываем форму
          form.reset();
          submitBtn.textContent = originalText;
          submitBtn.disabled = false;
        }, 2000);
      }
    });

    // Закрытие модального окна успеха
    const closeSuccessModalBtn = document.getElementById('closeSuccessModal');
    if (closeSuccessModalBtn) {
      closeSuccessModalBtn.addEventListener('click', function() {
        const successContent = successModal.querySelector('.bg-white\\/10');
        if (successContent) {
          gsap.to(successContent, {
            opacity: 0,
            scale: 0.9,
            y: 20,
            duration: 0.2,
            ease: "power2.out",
            onComplete: () => {
              successModal.classList.add('hidden');
              successModal.classList.remove('flex');
            }
          });
        }
      });
    }

    // Закрытие модального окна успеха при клике вне его
    successModal.addEventListener('click', function(e) {
      if (e.target === successModal) {
        const successContent = successModal.querySelector('.bg-white\\/10');
        if (successContent) {
          gsap.to(successContent, {
            opacity: 0,
            scale: 0.9,
            y: 20,
            duration: 0.2,
            ease: "power2.out",
            onComplete: () => {
              successModal.classList.add('hidden');
              successModal.classList.remove('flex');
            }
          });
        }
      }
    });

    // Маска для телефона
    const phoneInput = document.getElementById('studentPhone') as HTMLInputElement;
    if (phoneInput) {
      phoneInput.addEventListener('input', function(e) {
        const target = e.target as HTMLInputElement;
        let value = target.value.replace(/\D/g, '');
        if (value.length > 0) {
          if (value.length <= 1) {
            value = `+7 (${value}`;
          } else if (value.length <= 4) {
            value = `+7 (${value.slice(1)}`;
          } else if (value.length <= 7) {
            value = `+7 (${value.slice(1, 4)}) ${value.slice(4)}`;
          } else if (value.length <= 9) {
            value = `+7 (${value.slice(1, 4)}) ${value.slice(4, 7)}-${value.slice(7)}`;
          } else {
            value = `+7 (${value.slice(1, 4)}) ${value.slice(4, 7)}-${value.slice(7, 9)}-${value.slice(9, 11)}`;
          }
        }
        target.value = value;
      });
    }
  });
</script>
