---
import Header from '../components/Header.astro';
import Hero from "../components/Hero.astro";
import AboutUs from "../components/AboutUs.astro";
import Services from "../components/Services.astro";
import OurProducts from '../components/OurProducts.astro';
import EducationProgram from '../components/EducationProgram.astro';
import Portfolio from '../components/Portfolio.astro';
import WhyUs from "../components/WhyUs.astro";
import Contacts from "../components/Contacts.astro";
import Layout from '../layouts/Layout.astro';

---
<Layout>
    <div class="flex flex-col bg-no-repeat bg-cover bg-center bg-[url('/src/assets/hero-bg.jpg')] min-h-[675px] px-[10px] lg:px-12 py-[22px] lg:py-[34px]">
        <Header/>
        <Hero/>
    </div>
    <Services/>
    <EducationProgram/>
    <OurProducts/>
    <Portfolio/>
    <div class="relative flex flex-col bg-no-repeat bg-cover bg-center bg-[url('/src/assets/bottom-bg.jpg')] min-h-[675px]">
        <div class="lg:hidden absolute top-0 left-0 right-0 bottom-0 inset-0 bg-black/50 w-full h-full z-10"/>
        <WhyUs/>
        <Contacts/>
    </div>
</Layout>

<script>
    import gsap from "gsap";
    import Lenis from "lenis";
    import { ScrollTrigger } from "gsap/ScrollTrigger";
    
    const lenis = new Lenis();
    lenis.on('scroll', ScrollTrigger.update);

    gsap.ticker.add((time) => {
        lenis.raf(time * 1000); 
    });
    gsap.ticker.lagSmoothing(0);

    function raf(time: number) {
        lenis.raf(time);
        requestAnimationFrame(raf);
    }
    requestAnimationFrame(raf);

    gsap.registerPlugin(ScrollTrigger);

    gsap.fromTo('.about-us-decor', {
                x: -100,  
                y: 200,   
                rotation: -20, 
                scale: 0.7,
                opacity: 0
            }, 
            {
                x: 0,
                y: 0,
                rotation: 0,
                scale: 1,
                opacity: 1,
                
                // ScrollTrigger configuration
                scrollTrigger: {
                    trigger: '.about-us-decor',
                    start: 'top 80%', 
                    end: 'bottom 60%', 
                    once: false,        
                    markers: false      
                },
                
                // Animation configuration
                duration: 1.5,
                ease: 'power2.out'
            }
    );

    gsap.fromTo(
        ".hero-title > div:nth-child(1)",
        { x: -100, opacity: 0 },
        { x: 0, opacity: 1, duration: 1 }
    );

    gsap.fromTo(
        ".hero-title > div:nth-child(2)",
        { x: -100, opacity: 0 },
        { x: 0, opacity: 1, duration: 1, delay: 0.2 }
    );

    gsap.fromTo(
        ".hero-title > div:nth-child(3)",
        { x: -100, opacity: 0 },
        { x: 0, opacity: 1, duration: 1, delay: 0.4 }
    );

    gsap.fromTo(
        ".hero-description",
        { opacity: 0 },
        { opacity: 1, duration: 1, delay: 1.5 }
    );

    gsap.fromTo("header",
        {
            y: -100, // Start from above the viewport
            opacity: 0
        },
        {
            y: 0, // Move to original position
            opacity: 1,
            duration: 1,
            ease: "power3.out", // Smooth easing
        }
    );
    
    gsap.fromTo(
        ".service-content",
        {
            opacity: 0,
        },
        {
            opacity: 1,
            duration: 1,
            delay: 0.5,
            ease: "power3.out", 
            scrollTrigger: {
                trigger: ".service-content",
                start: "top 80%",
                end: "bottom 60%",
                once: true,
                markers: false,
            },
        }
    );

    gsap.fromTo(".about-us-content",
            {
                opacity: 0
            },
            {
                opacity: 1,
                duration: 1,
                ease: "power3.out", 
                delay: 0.5,
                scrollTrigger: {
                    trigger: ".about-us-content",
                    start: "top 80%",
                    end: "bottom 60%",
                    once: true,
                    markers: false,
                },
            }
    );

    // Cards animation
    const cards = document.querySelectorAll(".service-card");
    cards.forEach((card, index) => {
        gsap.fromTo(
            card,
            {
                opacity: 0,
                y: 100, // Start below the viewport
            },
            {
                opacity: 1,
                y: 0,
                duration: 1,
                ease: "power2.out",
                delay: index * 0.2, 
                scrollTrigger: {
                    trigger: card,
                    start: "top 80%", // Trigger animation when card is visible
                    once: true, // Animation runs only once
                },
            }
        );

        card.addEventListener("mouseenter", () => {
            gsap.to(card, {
                y: -5, 
                scale: 1.02, 
                duration: 0.4,
                ease: "power2.out",
            });
        });

        card.addEventListener("mouseleave", () => {
            gsap.to(card, {
                y: 0,
                scale: 1,
                duration: 0.3,
                ease: "power2.out",
            });
        });
    });

    gsap.fromTo(
        ".why-us-title",
        {
            opacity: 0,
            y: 20,
        },
        {
            opacity: 1,
            y: 0,
            duration: 1,
            ease: "power2.out",
            scrollTrigger: {
                trigger: "h3",
                start: "top 90%",
                once: true,
            },
        }
    );

    // Circle Card animations
    const circleCards = document.querySelectorAll(".circle-card");
    circleCards.forEach((card, index) => {
        gsap.fromTo(
            card,
            {
                opacity: 0,
                y: 30,
                scale: 0.95,
            },
            {
                opacity: 1,
                y: 0,
                scale: 1,
                duration: 0.8,
                ease: "power2.out",
                delay: index * 0.2, // Stagger effect
                scrollTrigger: {
                    trigger: card,
                    start: "top 90%",
                    once: true,
                },
            }
        );
    });

    gsap.fromTo(
        ".contact-section", 
        {
            opacity: 0,
            y: -50
        },
        {
            opacity: 1,
            y: 0,
            duration: 1,
            stagger: 0.3,
            ease: "power3.out",
            scrollTrigger: {
                trigger: ".contact-section",
                start: "top 80%",
                end: "bottom 60%",
                once: true,
                markers: false,
            },
        }
    );

    // Products section animations
    gsap.fromTo(".products-header",
        {
            opacity: 0,
            y: 50
        },
        {
            opacity: 1,
            y: 0,
            duration: 1,
            ease: "power3.out", 
            scrollTrigger: {
                trigger: ".products-header",
                start: "top 80%",
                once: true,
                markers: false,
            },
        }
    );

    // Product cards animation
    const productCards = document.querySelectorAll(".product-card");
    productCards.forEach((card, index) => {
        gsap.fromTo(
            card,
            {
                opacity: 0,
                y: 60,
                scale: 0.95
            },
            {
                opacity: 1,
                y: 0,
                scale: 1,
                duration: 0.7,
                ease: "power2.out",
                delay: index * 0.15,
                scrollTrigger: {
                    trigger: card,
                    start: "top 85%",
                    once: true,
                },
            }
        );
    });

    // Education section animations
    gsap.fromTo(".education-content",
        {
            opacity: 0,
            y: 50
        },
        {
            opacity: 1,
            y: 0,
            duration: 1,
            ease: "power3.out", 
            scrollTrigger: {
                trigger: ".education-content",
                start: "top 80%",
                once: true,
                markers: false,
            },
        }
    );

    // Education cards animation
    const educationCards = document.querySelectorAll(".education-card");
    educationCards.forEach((card, index) => {
        gsap.fromTo(
            card,
            {
                opacity: 0,
                y: 80,
                scale: 0.95
            },
            {
                opacity: 1,
                y: 0,
                scale: 1,
                duration: 0.8,
                ease: "power2.out",
                delay: index * 0.2,
                scrollTrigger: {
                    trigger: card,
                    start: "top 85%",
                    once: true,
                },
            }
        );
    });

    // Stat cards animation with stagger
    const statCards = document.querySelectorAll(".stat-card");
    statCards.forEach((card, index) => {
        gsap.fromTo(
            card,
            {
                opacity: 0,
                y: 30,
                scale: 0.9
            },
            {
                opacity: 1,
                y: 0,
                scale: 1,
                duration: 0.6,
                ease: "back.out(1.2)",
                delay: index * 0.1,
                scrollTrigger: {
                    trigger: card,
                    start: "top 90%",
                    once: true,
                },
            }
        );
    });

    // Education result animation
    gsap.fromTo(".education-result",
        {
            opacity: 0,
            y: 50
        },
        {
            opacity: 1,
            y: 0,
            duration: 1,
            ease: "power3.out", 
            scrollTrigger: {
                trigger: ".education-result",
                start: "top 80%",
                once: true,
                markers: false,
            },
        }
    );
</script>